#include<cstdio>
#include<iostream>
#include<vector>
#include<stack>
#include<map>
#include<set>
#include<cstring>
#include<cmath>
#include<string>
#include<cstdlib>
#include<queue>
#include<algorithm>
#define fr(i,m,n) for(i=m;i<n;i++)
#define ifr(i,m,n) for(i=m;i>n;i--)
#define ll long long
#define sc scanf
#define pf printf
#define var(x) x i=0,j=0,k=0,tmp1,tmp2,tmp3,tmp=0
using namespace std;

void print(int mat[25][25],int N) {
	var(int);
	fr(k,0,N) {
		fr(j,0,N) {
			pf("%d ",mat[k][j]);
		}
		pf("\n");
	}
}

void init(int mat[25][25],int N) {
	var(int);
	fr(i,0,N)
		fr(j,0,N)
			mat[i][j]=0;
}

int main() {
	var(int);
	int T,N;
	char dir[10];
	sc("%d",&T);
	int mat[25][25];
	fr(i,1,T+1) {
		sc("%d %s",&N,dir);
		//pf("%d",N);
		init(mat,N);
		fr(j,0,N) {
			fr(k,0,N) {
				sc("%d",&tmp);
				mat[j][k]=tmp;
				//pf("0");
			}
		}
		if(strcmp(dir,"right")==0) {
		
			tmp3=1;
			while(tmp3) {
				//pf("\n");
				//print(mat,N);
				//pf("\n");
				//fflush(stdout);
				tmp3=0;
				fr(j,0,N) {
					ifr(k,N-1,0) {
						if((mat[j][k]==0)&&(mat[j][k-1])!=0) {
							mat[j][k]=mat[j][k-1];
							mat[j][k-1]=0;
							tmp3=1;
						}
					}
				}
			}
			//pf("right");
			//fflush(stdout);
			fr(j,0,N) {
				ifr(k,N-1,0) {
					if(mat[j][k]==mat[j][k-1]) {
						mat[j][k]*=2;
						mat[j][k-1]=0;
						//pf("0");
					}
				}
			}
			//relax
			tmp3=1;
			while(tmp3) {
				//pf("\n");
				//print(mat,N);
				//pf("\n");
				//fflush(stdout);
				tmp3=0;
				fr(j,0,N) {
					ifr(k,N-1,0) {
						if((mat[j][k]==0)&&(mat[j][k-1])!=0) {
							mat[j][k]=mat[j][k-1];
							mat[j][k-1]=0;
							tmp3=1;
						}
					}
				}
			}
		}
		else if(strcmp(dir,"up")==0) {
		
			tmp3=1;
			while(tmp3) {
				tmp3=0;
				fr(j,0,N) {
					fr(k,0,N-1) {
						if((mat[k][j]==0) && mat[k+1][j]!=0) {
							mat[k][j]=mat[k+1][j];
							mat[k+1][j]=0;
							tmp3=1;
						}
					}
				}
			}
			//pf("up");
			///fflush(stdout);
			fr(j,0,N) {
				fr(k,0,N-1) {
					if(mat[k][j]==mat[k+1][j]) {
						mat[k][j]*=2;
						mat[k+1][j]=0;
					}
				}
			}
			//relax
			tmp3=1;
			while(tmp3) {
				tmp3=0;
				fr(j,0,N) {
					fr(k,0,N-1) {
						if((mat[k][j]==0) && mat[k+1][j]!=0) {
							mat[k][j]=mat[k+1][j];
							mat[k+1][j]=0;
							tmp3=1;
						}
					}
				}
			}
		}
		else if(strcmp(dir,"down")==0) {
			//pf("down");
			//fflush(stdout);
			
			//relax
			tmp3=1;
			while(tmp3) {
				tmp3=0;
				fr(j,0,N) {
					ifr(k,N-1,0) {
						if((mat[k][j]==0)&& mat[k-1][j]!=0) {
							mat[k][j]=mat[k-1][j];
							mat[k-1][j]=0;
							tmp3=1;
						}
					}
				}
			}
			
			fr(j,0,N) {
				ifr(k,N-1,0) {
					if(mat[k][j]==mat[k-1][j]) {
						//pf("enter");
						mat[k][j]*=2;
						mat[k-1][j]=0;
					}
				}
			}
			//print(mat,N);
			//relax
			tmp3=1;
			while(tmp3) {
				tmp3=0;
				fr(j,0,N) {
					ifr(k,N-1,0) {
						if((mat[k][j]==0)&& mat[k-1][j]!=0) {
							mat[k][j]=mat[k-1][j];
							mat[k-1][j]=0;
							tmp3=1;
						}
					}
				}
			}
		}
		else if(strcmp(dir,"left")==0) {
			//pf("left");
			//fflush(stdout);
			
			//relax
			tmp3=1;
			while(tmp3) {
				tmp3=0;
				fr(j,0,N) {
					fr(k,0,N-1) {
						if((mat[j][k]==0)&& mat[j][k+1]!=0) {
							mat[j][k]=mat[j][k+1];
							mat[j][k+1]=0;
							tmp3=1;
						}
					}
				}
			}
			
			
			fr(j,0,N) {
				fr(k,0,N-1) {
					if(mat[j][k]==mat[j][k+1]) {
						mat[j][k]*=2;
						mat[j][k+1]=0;
					}
				}
			}
			//relax
			tmp3=1;
			while(tmp3) {
				tmp3=0;
				fr(j,0,N) {
					fr(k,0,N-1) {
						if((mat[j][k]==0)&& mat[j][k+1]!=0) {
							mat[j][k]=mat[j][k+1];
							mat[j][k+1]=0;
							tmp3=1;
						}
					}
				}
			}
		}
		else {
			cout<<"Wrong direction"<<endl;
			//pf("right");
			//fflush(stdout);
		}
		pf("Case #%d:\n",i);
		print(mat,N);
	}
	return 0;
}
